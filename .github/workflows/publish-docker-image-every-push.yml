name: Publish Docker image on every push to master branch

on:
  push:
    branches:
      - master
      - avive
      - release/*
      - feat/*

env:
  OTP_VERSION: '24.3.4.1'
  ELIXIR_VERSION: '1.13.4'
  ECR_REPOSITORY: offchainlabs-blockscout

jobs:
  push_to_registry:
    name: Push Docker image to registry
    runs-on: ubuntu-latest
    outputs:
      short-sha: ${{ steps.output-step.outputs.short-sha }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_ACCESS_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value={{sha}}
            type=raw,value={{branch}}-{{sha}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}            

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Add outputs
        run: |
          echo "::set-output name=short-sha::${{ env.SHORT_SHA }}"
        id: output-step

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        id: docker_build
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            DISABLE_READ_API=false
            API_PATH=
            NETWORK_PATH=
            DISABLE_WEBAPP=false
            DISABLE_WRITE_API=false
            CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
            WOBSERVER_ENABLED=false
            ADMIN_PANEL_ENABLED=false
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
            CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
            SOCKET_ROOT=
            CHAIN_ID=
            JSON_RPC=
            COIN_NAME=
            SUBNETWORK=

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}